package main

import "fmt"

// 変数 T のポインタは、*T 型で、ゼロ値は nil
// & オペレータはそのオペランド(operand)へのポインタを引き出す

// var p *int　と宣言する時
// p がポインタ型変数
// *int はポインタ型
// & を使うことで、ポインタ型を生成することができる
// &p は p のアドレスを示す

func main() {
	i, j := 42, 2701 // i と j は int型

	// &i で *int型を生成する
	// p は i のアドレスが格納されている
	p := &i
	fmt.Println(p)  // i のアドレスが表示される
	fmt.Println(*p) // *p で　i のアドレスを参照して i の値を読み出す
	*p = 21         // で i のアドレスを参照して i の値を 42->21 に書き換える
	fmt.Println(i)  // i の値が 21 に書き換わっている

	p = &j         // p に j のアドレスを格納
	*p = *p / 37   // *p で j のアドレスを参照して j の値を 2701/37 に書き換える
	fmt.Println(j) // j の値が 2701/37 に書き換わっている
}
